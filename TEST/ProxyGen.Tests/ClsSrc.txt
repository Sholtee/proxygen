[assembly: global::System.Reflection.AssemblyDescriptionAttribute("Generated by ProxyGen.NET")]
internal sealed class GeneratedClass_F5C167ACE65B4ED544B1FDD3106A34B8 : global::Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTests.FooInterceptor, global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>
{
    public GeneratedClass_F5C167ACE65B4ED544B1FDD3106A34B8(global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32> target): base(target)
    {
    }

    global::System.Int32 global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Foo<TT>(global::System.Int32 a, out global::System.String b, ref TT c)
    {
        global::System.Object[] args = new global::System.Object[]{a, default(global::System.String), c};
        this.InvokeTarget = () =>
        {
            global::System.Int32 cb_a = (global::System.Int32)args[0];
            global::System.String cb_b;
            TT cb_c = (TT)args[2];
            global::System.Object result;
            result = (global::System.Object)this.Target.Foo<TT>(cb_a, out cb_b, ref cb_c);
            args[1] = (global::System.Object)cb_b;
            args[2] = (global::System.Object)cb_c;
            return result;
        };
        global::System.Reflection.MethodInfo method = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveMethod(this.InvokeTarget);
        global::System.Object result = this.Invoke(method, args, method);
        b = (global::System.String)args[1];
        c = (TT)args[2];
        return (global::System.Int32)result;
    }

    void global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Bar()
    {
        global::System.Object[] args = new global::System.Object[0];
        this.InvokeTarget = () =>
        {
            this.Target.Bar();
            return null;
        };
        global::System.Reflection.MethodInfo method = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveMethod(this.InvokeTarget);
        this.Invoke(method, args, method);
    }

    global::System.Int32 global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Prop
    {
        get
        {
            global::System.Object[] args = new global::System.Object[0];
            this.InvokeTarget = () =>
            {
                global::System.Object result;
                result = (global::System.Object)this.Target.Prop;
                return result;
            };
            global::System.Reflection.PropertyInfo prop = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveProperty(this.InvokeTarget);
            return (global::System.Int32)this.Invoke(prop.GetMethod, args, prop);
        }

        set
        {
            global::System.Object[] args = new global::System.Object[]{value};
            this.InvokeTarget = () =>
            {
                global::System.Int32 cb_value = (global::System.Int32)args[0];
                this.Target.Prop = cb_value;
                return null;
            };
            global::System.Reflection.PropertyInfo prop = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveProperty(this.InvokeTarget);
            this.Invoke(prop.SetMethod, args, prop);
        }
    }

    event global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.TestDelegate<global::System.Int32> global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Event
    {
        add
        {
            global::System.Object[] args = new global::System.Object[]{value};
            this.InvokeTarget = () =>
            {
                global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.TestDelegate<global::System.Int32> cb_value = (global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.TestDelegate<global::System.Int32>)args[0];
                this.Target.Event += cb_value;
                return null;
            };
            global::System.Reflection.EventInfo evt = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveEvent(this.InvokeTarget);
            this.Invoke(evt.AddMethod, args, evt);
        }

        remove
        {
            global::System.Object[] args = new global::System.Object[]{value};
            this.InvokeTarget = () =>
            {
                global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.TestDelegate<global::System.Int32> cb_value = (global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.TestDelegate<global::System.Int32>)args[0];
                this.Target.Event -= cb_value;
                return null;
            };
            global::System.Reflection.EventInfo evt = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveEvent(this.InvokeTarget);
            this.Invoke(evt.RemoveMethod, args, evt);
        }
    }
}