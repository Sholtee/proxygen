internal sealed class GeneratedProxy : Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTests.FooInterceptor, Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>
{
    public GeneratedProxy(Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32> target): base(target)
    {
    }

    System.Int32 Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>.Foo<TT>(System.Int32 a, out System.String b, ref TT c)
    {
        System.Object[] args = new System.Object[]{a, default(System.String), c};
        System.Reflection.MethodInfo currentMethod;
        System.String dummy_b;
        TT dummy_c = default(TT);
        currentMethod = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveMethod(() => this.Target.Foo<TT>(a, out dummy_b, ref dummy_c));
        this.InvokeTarget = () =>
        {
            System.Int32 cb_a = (System.Int32)args[0];
            System.String cb_b;
            TT cb_c = (TT)args[2];
            System.Object result;
            result = this.Target.Foo<TT>(cb_a, out cb_b, ref cb_c);
            args[1] = (System.Object)cb_b;
            args[2] = (System.Object)cb_c;
            return result;
        }

        ;
        System.Object result = this.Invoke(currentMethod, args, currentMethod);
        b = (System.String)args[1];
        c = (TT)args[2];
        return (System.Int32)result;
    }

    void Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>.Bar()
    {
        System.Object[] args = new System.Object[0];
        System.Reflection.MethodInfo currentMethod;
        currentMethod = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveMethod(() => this.Target.Bar());
        this.InvokeTarget = () =>
        {
            System.Object result;
            result = null;
            this.Target.Bar();
            return result;
        }

        ;
        System.Object result = this.Invoke(currentMethod, args, currentMethod);
    }

    System.Int32 Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>.Prop
    {
        get
        {
            this.InvokeTarget = () => this.Target.Prop;
            System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveProperty(this.InvokeTarget);
            return (System.Int32)this.Invoke(prop.GetMethod, new System.Object[0], prop);
        }

        set
        {
            this.InvokeTarget = () =>
            {
                this.Target.Prop = value;
                return null;
            }

            ;
            System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveProperty(this.InvokeTarget);
            this.Invoke(prop.SetMethod, new System.Object[]{value}, prop);
        }
    }

    private static readonly System.Reflection.EventInfo Field335544323 = (System.Reflection.EventInfo)Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveMember(335544323);
    event Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.TestDelegate<System.Int32> Solti.Utils.Proxy.SyntaxFactories.Tests.ProxySyntaxFactoryTestsBase.IFoo<System.Int32>.Event
    {
        add
        {
            this.InvokeTarget = () =>
            {
                this.Target.Event += value;
                return null;
            }

            ;
            this.Invoke(GeneratedProxy.Field335544323.AddMethod, new System.Object[]{value}, GeneratedProxy.Field335544323);
        }

        remove
        {
            this.InvokeTarget = () =>
            {
                this.Target.Event -= value;
                return null;
            }

            ;
            this.Invoke(GeneratedProxy.Field335544323.RemoveMethod, new System.Object[]{value}, GeneratedProxy.Field335544323);
        }
    }
}