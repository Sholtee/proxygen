System.Int32 Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<System.Int32>.Prop
{
    get
    {
        System.Object[] args = new System.Object[0];
        this.InvokeTarget = () =>
        {
            System.Object result;
            result = (System.Object)this.Target.Prop;
            return result;
        };
        System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveProperty(this.InvokeTarget);
        return (System.Int32)this.Invoke(prop.GetMethod, args, prop);
    }

    set
    {
        System.Object[] args = new System.Object[]{value};
        this.InvokeTarget = () =>
        {
            System.Int32 cb_value = (System.Int32)args[0];
            this.Target.Prop = cb_value;
            return null;
        };
        System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<System.Int32>>.ResolveProperty(this.InvokeTarget);
        this.Invoke(prop.SetMethod, args, prop);
    }
}