global::System.Int32 global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Prop
{
    get
    {
        static global::System.Object InvokeTarget(global::System.Object target, global::System.Object[] args)
        {
            return (global::System.Object)((global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>)target).Prop;
        }

        global::System.Object[] args = new global::System.Object[0];
        return (global::System.Int32)this.Invoke(new global::Solti.Utils.Proxy.InvocationContext(args, InvokeTarget, global::System.Reflection.MemberTypes.Property));
    }

    set
    {
        static global::System.Object InvokeTarget(global::System.Object target, global::System.Object[] args)
        {
            global::System.Int32 _value = (global::System.Int32)args[0];
            ((global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>)target).Prop = _value;
            return null;
        }

        global::System.Object[] args = new global::System.Object[]{value};
        this.Invoke(new global::Solti.Utils.Proxy.InvocationContext(args, InvokeTarget, global::System.Reflection.MemberTypes.Property));
    }
}