global::System.Int32 global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>.Foo<TT>(global::System.Int32 a, out global::System.String b, ref TT c)
{
    global::System.Object[] args = new global::System.Object[]{a, default(global::System.String), c};
    this.InvokeTarget = () =>
    {
        global::System.Int32 cb_a = (global::System.Int32)args[0];
        global::System.String cb_b;
        TT cb_c = (TT)args[2];
        global::System.Object result = (global::System.Object)this.Target.Foo<TT>(cb_a, out cb_b, ref cb_c);
        args[1] = (global::System.Object)cb_b;
        args[2] = (global::System.Object)cb_c;
        return result;
    };
    global::System.Reflection.MethodInfo method = global::Solti.Utils.Proxy.InterfaceInterceptor<global::Solti.Utils.Proxy.SyntaxFactories.Tests.SyntaxFactoryTestsBase.IFoo<global::System.Int32>>.ResolveMethod(this.InvokeTarget);
    global::System.Object result = this.Invoke(method, args, method);
    b = (global::System.String)args[1];
    c = (TT)args[2];
    return (global::System.Int32)result;
}