System.Int32 System.Collections.Generic.IList<System.Int32>.this[System.Int32 index]
{
    get
    {
        this.InvokeTarget = () => this.Target[index];
        System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<System.Collections.Generic.IList<System.Int32>>.ResolvePropertyGet(() => this.Target[index]);
        return (System.Int32)this.Invoke(prop.GetMethod, new System.Object[]{index}, prop);
    }

    set
    {
        this.InvokeTarget = () =>
        {
            this.Target[index] = value;
            return null;
        }

        ;
        System.Reflection.PropertyInfo prop = Solti.Utils.Proxy.InterfaceInterceptor<System.Collections.Generic.IList<System.Int32>>.ResolvePropertySet(() => this.Target[index] = value);
        this.Invoke(prop.SetMethod, new System.Object[]{index, value}, prop);
    }
}