System.Int32 Solti.Utils.Proxy.Internals.Tests.ProxySyntaxGeneratorTestsBase.IFoo<System.Int32>.Foo<TT>(System.Int32 a, out System.String b, ref TT c)
{
    System.String dummy_b;
    TT dummy_c = default(TT);
    System.Reflection.MethodInfo currentMethod = MethodAccess(() => Target.Foo(a, out dummy_b, ref dummy_c));
    System.Object[] args = new System.Object[]{a, default(System.String), c};
    System.Object result = Invoke(currentMethod, args, currentMethod);
    if (result == CALL_TARGET)
        return Target.Foo(a, out b, ref c);
    b = (System.String)args[1];
    c = (TT)args[2];
    return (System.Int32)result;
}