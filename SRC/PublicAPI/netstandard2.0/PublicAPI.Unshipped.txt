Solti.Utils.Proxy.ClassInvocationContext
Solti.Utils.Proxy.ClassInvocationContext.Args.get -> object?[]!
Solti.Utils.Proxy.ClassInvocationContext.ClassInvocationContext(Solti.Utils.Proxy.ExtendedMemberInfo! targetMember, System.Func<object?[]!, object?>! dispatch, object?[]! args) -> void
Solti.Utils.Proxy.ClassInvocationContext.Dispatch.get -> System.Func<object?[]!, object?>!
Solti.Utils.Proxy.ClassInvocationContext.Member.get -> Solti.Utils.Proxy.ExtendedMemberInfo!
Solti.Utils.Proxy.ExtendedMemberInfo
Solti.Utils.Proxy.ExtendedMemberInfo.ExtendedMemberInfo(System.Reflection.MethodInfo! method) -> void
Solti.Utils.Proxy.ExtendedMemberInfo.Member.get -> System.Reflection.MemberInfo!
Solti.Utils.Proxy.ExtendedMemberInfo.Method.get -> System.Reflection.MethodInfo!
Solti.Utils.Proxy.IInvocationContext
Solti.Utils.Proxy.IInvocationContext.Args.get -> object?[]!
Solti.Utils.Proxy.IInvocationContext.Member.get -> Solti.Utils.Proxy.ExtendedMemberInfo!
Solti.Utils.Proxy.InterfaceInterceptionContext
Solti.Utils.Proxy.InterfaceInterceptionContext.Dispatch.get -> System.Func<object!, object?[]!, object?>!
Solti.Utils.Proxy.InterfaceInterceptionContext.InterfaceInterceptionContext(Solti.Utils.Proxy.InterfaceInterceptionContext! src) -> void
Solti.Utils.Proxy.InterfaceInterceptionContext.InterfaceInterceptionContext(System.Func<object!, object?[]!, object?>! dispatch, int callIndex, System.Collections.Generic.IReadOnlyDictionary<System.Reflection.MethodInfo!, System.Reflection.MethodInfo!>? mappings) -> void
Solti.Utils.Proxy.InterfaceInterceptionContext.Member.get -> Solti.Utils.Proxy.ExtendedMemberInfo!
Solti.Utils.Proxy.InterfaceInterceptionContext.Target.get -> Solti.Utils.Proxy.ExtendedMemberInfo!
Solti.Utils.Proxy.InterfaceInvocationContext
Solti.Utils.Proxy.InterfaceInvocationContext.Args.get -> object?[]!
Solti.Utils.Proxy.InterfaceInvocationContext.InterfaceInvocationContext(object?[]! args, Solti.Utils.Proxy.InterfaceInterceptionContext! methodContext) -> void
virtual Solti.Utils.Proxy.InterfaceInterceptor<TInterface, TTarget>.Invoke(Solti.Utils.Proxy.InterfaceInvocationContext! context) -> object?